import React, { useState } from "react";
import ThemeToggle from "./ThemeToggle";
import { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer } from "recharts";
import "./App.css";

// โ ุฏุงูุฉ ูุชูููุฏ ุจูุงูุงุช ุนุดูุงุฆูุฉ ูุน ุจูุงูุงุช ุงููุฎุทุท
const generateRandomData = () => {
  const followers = Math.floor(Math.random() * 40000) + 1000;
  const posts = Math.floor(Math.random() * 1000) + 100;
  const engagementRate = (Math.random() * 10).toFixed(2.5);

  return {
    followers,
    posts,
    engagementRate,
    chartData: [
      { name: "ุงููุชุงุจุนูู", value: followers },
      { name: "ุงูููุดูุฑุงุช", value: posts },
      { name: "ุงูุชูุงุนู", value: parseFloat(engagementRate) * 1000 }, // ุชุญููู ุงููุณุจุฉ ุงููุฆููุฉ ุฅูู ูููุฉ ุฃูุจุฑ ูููุฎุทุท
    ],
  };
};

const App = () => {
  const [username, setUsername] = useState("");
  const [platform, setPlatform] = useState("TikTok");
  const [data, setData] = useState(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);

  // โ ุชุญุฏูุซ ุฏุงูุฉ ุงูุจุญุซ ูุชูููุฏ ุจูุงูุงุช ุนุดูุงุฆูุฉ ูุน ุงููุฎุทุท
  const fetchData = () => {
    if (!username.trim()) {
      setError("โ ุงูุฑุฌุงุก ุฅุฏุฎุงู ุงุณู ุงููุณุชุฎุฏู");
      return;
    }
    setError(null);
    setLoading(true);

    setTimeout(() => {
      setData(generateRandomData());
      setLoading(false);
    }, 1000);
  };

  return (
    <div className="container">
      <ThemeToggle />

      <h1 className="main-title">ุชุญููู ุจูุงูุงุช ูุงููุนุงููุฉ</h1>
      <p className="sub-title">ููุตุชู ุงูููุซููุฉ ููุนุฑูุฉ ุงูุฅุญุตุงุฆูุงุช ูุงูุชูุงุนู.</p>

      {/* โ ุดุฑูุท ุงูุจุญุซ */}
      <div className="search-box">
        <input
          type="text"
          placeholder="ุงุณู ุงููุณุชุฎุฏู"
          value={username}
          onChange={(e) => setUsername(e.target.value)}
        />
        <select value={platform} onChange={(e) => setPlatform(e.target.value)}>
          <option value="TikTok">๐ต TikTok</option>
          <option value="YouTube">๐น YouTube</option>
          <option value="Instagram">๐ธ Instagram</option>
        </select>
        <button className="search-btn" onClick={fetchData}>ุจุญุซ</button>
      </div>

      {/* โ ุนุฑุถ ุฑุณุงูุฉ ุฎุทุฃ ุนูุฏ ุนุฏู ุฅุฏุฎุงู ุงุณู ุงููุณุชุฎุฏู */}
      {error && <p className="error-message">{error}</p>}

      {/* โ ุนุฑุถ ุญุงูุฉ ุงูุชุญููู */}
      {loading && <p className="loading-message">โณ ุฌุงุฑู ุงูุชุญููู...</p>}

      {/* โ ุนุฑุถ ุงููุชุงุฆุฌ ุนูุฏ ุงูุจุญุซ */}
      {data && !loading && (
        <>
          <div className="stats-container">
            <div className="stats-card glowing-card">
              <h3>ุนุฏุฏ ุงููุชุงุจุนูู</h3>
              <p>{data.followers.toLocaleString()}</p>
            </div>
            <div className="stats-card glowing-card">
              <h3>ุนุฏุฏ ุงูููุดูุฑุงุช</h3>
              <p>{data.posts}</p>
            </div>
            <div className="stats-card glowing-card">
              <h3>ูุณุจุฉ ุงูุชูุงุนู</h3>
              <p>{data.engagementRate}%</p>
            </div>
          </div>

          {/* โ ุนุฑุถ ุงููุฎุทุท ุงูุจูุงูู */}
          <div className="chart-container">
            <h2>๐ ุชุญููู ุงูุจูุงูุงุช</h2>
            <ResponsiveContainer width="100%" height={350}>
              <BarChart data={data.chartData}>
                <XAxis dataKey="name" />
                <YAxis />
                <Tooltip />
                <Bar dataKey="value" fill="#6c63ff" />
              </BarChart>
            </ResponsiveContainer>
          </div>
        </>
      )}

      <footer className="footer">ยฉ 2025 ููุตุฉ ุชุญููู ุงูุจูุงูุงุช - ุฌููุน ุงูุญููู ูุญููุธุฉ</footer>
    </div>
  );
};

export default App;
